@using System.Web;
@model ResultViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <title>4 Milyon Veri</title>

    <!-- Meta -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="description" content="" />
    <meta name="keywords" content="">
    <meta name="author" content="Phoenixcoded" />
    <!-- Favicon icon -->
    <link rel="icon" href="~/flat-able-lite/dist/assets/images/favicon.ico" type="image/x-icon">

    <!-- vendor css -->
    <link rel="stylesheet" href="~/flat-able-lite/dist/assets/css/style.css">

</head>
<body>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.bundle.min.js'></script>


    <div class="loader-bg">
        <div class="loader-track">
            <div class="loader-fill"></div>
        </div>
    </div>
    <div class="container">
        <div class="col-xl-12">
            <h5 class="mt-4">4 Milyon Plaka Verisi</h5>
            <hr>

            <div class="row">
                <!-- First Row - Two cards in a 2x2 arrangement -->
                <div class="col-md-6">
                    <div class="card text-white bg-primary ">
                        <h5 class="card-header text-white">En Fazla Olan Plakalar</h5>
                        <div class="card-body">
                            <h5>En Çok Kullanılan Plakalar</h5>
                            <canvas id="plateMaxChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card text-white bg-info mb-3">
                        <h5 class="card-header text-white">En Az Olan Plaka</h5>
                        <div class="card-body">
                            <h5>Bu Şehir Girdap Gülüm</h5>
                            <canvas id="plateMinChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card text-white bg-success mb-3">
                        <h5 class="card-header text-white">En Fazla Olan Araç Markası</h5>
                        <div class="card-body">
                            <h5>En Çok Tercih Edilen Arabalar Markası</h5>
                            <canvas id="brandMaxChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card text-white  bg-warning mb-3">
                        <h5 class="card-header text-white">En Az Olan Araç Markası</h5>
                        <div class="card-body">
                            <h5>En Az Tercih Edilen Arabalar Markası</h5>
                            <canvas id="brandMinChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            En Fazla Tercih Edilen Vites Türü
                        </div>
                        <div class="card-body">
                            <canvas id="shiftTypeChart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            En Fazla Tercih Edilen Yakıt Türü
                        </div>
                        <div class="card-body">
                            <canvas id="fuelTypeChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            En Fazla Tercih Edilen Kasa Türü
                        </div>
                        <div class="card-body">
                            <canvas id="caseTypeChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="input-group input-group-lg">
            <form method="post" id="searchForm">
                <div class="input-group-append">
                    <input type="text" name="keyword" class="form-control" placeholder="Ara" aria-label="Recipient's username" aria-describedby="basic-addon2">
                    <button class="btn btn-primary" type="submit" data-toggle="collapse" data-target="#searchResult">Ara</button>
                </div>
            </form>
        </div>

        <div id="searchResult" class="collapse">
            <table class="table">
                <thead>
                    <tr>
                        <th>Marka</th>
                        <th>Plaka</th>
                        <th>Vites Türü</th>
                        <th>Yakıt Tipi</th>
                    </tr>
                </thead>
                <tbody>
                    <var searchResultTable=document.getElementById("searchResult").getElementsByTagName("tbody")[0];
                         searchResultTable.innerHTML="" ;
                </tbody>
            </table>
        </div>
    </div>


    <!-- Required Js -->
    <script src="~/flat-able-lite/dist/assets/js/vendor-all.min.js"></script>
    <script src="~/flat-able-lite/dist/assets/js/plugins/bootstrap.min.js"></script>
    <script src="~/flat-able-lite/dist/assets/js/pcoded.min.js"></script>

    <!-- Apex Chart -->
    <script src="~/flat-able-lite/dist/assets/js/plugins/apexcharts.min.js"></script>


    <!-- custom-chart js -->
    <script src="~/flat-able-lite/dist/assets/js/pages/dashboard-main.js"></script>


    <script>
        document.getElementById("searchForm").addEventListener("submit", function (event) {
            event.preventDefault(); // Formun submit olayını engelle

            var searchKeyword = document.getElementsByName("keyword")[0].value;
            // Send the search keyword to the server using AJAX
            fetch(`/Default/Search?keyword=${encodeURIComponent(searchKeyword)}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data); // JSON verilerini konsolda göster
                    // Display search results in the table
                    var searchResultTable = document.getElementById("searchResult").getElementsByTagName("tbody")[0];
                    searchResultTable.innerHTML = "";
                    data.forEach(item => {
                        var row = searchResultTable.insertRow();
                        row.insertCell().innerText = item.brand;
                        row.insertCell().innerText = item.plateprefix;
                        row.insertCell().innerText = item.shifttype;
                        row.insertCell().innerText = item.fuel;
                    });
                });
        });
    </script>

    <script>
        var brandMaxData = [];
        var brandMaxLabels = [];
        @foreach (var item in @Model.BrandMax)
        {
            <text>
                brandMaxData.push(@item.COUNT);
            brandMaxLabels.push('@Html.Raw(HttpUtility.HtmlDecode(item.BRAND))');
            </text>
        }
                                                                                                                                                                                                                                                                                                                                                                      var brandMaxChart = new Chart(document.getElementById("brandMaxChart"), {
            type: 'pie',
            data: {
                labels: brandMaxLabels,
                datasets: [{
                    data: brandMaxData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(153, 102, 255, 0.8)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: '#ffffff'
                    }
                },
                title: {
                    display: false
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>
        var plateMaxData = [];
        var plateMaxLabels = [];
        @foreach (var item in @Model.PlateMax)
        {
            <text>
                plateMaxData.push(@item.COUNT);
            plateMaxLabels.push('@item.PLATE');
            </text>
        }
                                                                                                                                                                        var plateMaxChart = new Chart(document.getElementById("plateMaxChart"), {
            type: 'pie',
            data: {
                labels: plateMaxLabels,
                datasets: [{
                    data: plateMaxData,
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(75, 192, 192)',
                        'rgb(255, 205, 86)',
                        'rgb(201, 203, 207)',
                        'rgb(54, 162, 235)'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: '#ffffff'
                    }
                },
                title: {
                    display: false
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>
        var plateMinData = [];
        var plateMinLabels = [];
        @foreach (var item in @Model.PlateMin)
        {
            <text>
                plateMinData.push(@item.COUNT);
            plateMinLabels.push('@item.PLATE');
            </text>
        }
                                                                                                                                                                                                               var plateMinChart = new Chart(document.getElementById("plateMinChart"), {
            type: 'bar',
            data: {
                labels: plateMinLabels,
                datasets: [{
                    label: "Min Plate Bar Chart",
                    data: plateMinData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(153, 102, 255, 0.8)',
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: '#ffffff'
                    }
                },
                title: {
                    display: false
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>

        var fuelLabels = ["@Model.FuelType[0].FUEL", "@Model.FuelType[1].FUEL", "@Model.FuelType[2].FUEL"];
        var fuelData = [@Model.FuelType[0].COUNT, @Model.FuelType[1].COUNT, @Model.FuelType[2].COUNT];
        var fuelTypeChart = new Chart(document.getElementById("fuelTypeChart"), {
            type: 'doughnut',
            data: {
                labels: fuelLabels,
                datasets: [{
                    data: fuelData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)'
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: 'black'
                    }
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>

        var caseData = [];
        var caseLabels = [];
        @foreach (var item in @Model.CaseType)
        {
            <text>
                caseData.push(@item.COUNT);
            caseLabels.push('@Html.Raw(HttpUtility.HtmlDecode(item.CASETYPE))');
            </text>
        }
                                                var caseTypeChart = new Chart(document.getElementById("caseTypeChart"), {
            type: 'doughnut',
            data: {
                labels: caseLabels,
                datasets: [{
                    data: caseData,
                    backgroundColor: [
                        'rgba(255, 159, 64, 0.8)',
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: 'black'
                    }
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>
        var shiftData = [];
        var shiftLabels = [];
        @foreach (var item in @Model.ShiftType)
        {
            <text>
                shiftData.push(@item.COUNT);
            shiftLabels.push('@Html.Raw(HttpUtility.HtmlDecode(item.SHIFTTYPE))');
            </text>
        }

                                                                                                                                                                                                                                var shiftTypeChart = new Chart(document.getElementById("shiftTypeChart"), {
            type: 'doughnut',
            data: {
                labels: shiftLabels,
                datasets: [{
                    data: shiftData,
                    backgroundColor: [
                        'rgba(255, 159, 64, 0.8)',
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: 'black'
                    }
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>
        var brandMinData = [];
        var brandMinLabels = [];
        @foreach (var item in @Model.BrandMin)
        {
            <text>
                brandMinData.push(@item.COUNT);
            brandMinLabels.push('@Html.Raw(HttpUtility.HtmlDecode(item.BRAND))');
            </text>
        }

                                                                                                    var brandMinChart = new Chart(document.getElementById("brandMinChart"), {
            type: 'line',
            data: {
                labels: brandMinLabels,
                datasets: [{
                    label: "Minimum Brand Line Chart",
                    data: brandMinData,
                    fill: false,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: 'gray'
                    },
                },
                title: {
                    display: false
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            $(".fixed-button.active").remove();
        });
    </script>

</body>

</html>

